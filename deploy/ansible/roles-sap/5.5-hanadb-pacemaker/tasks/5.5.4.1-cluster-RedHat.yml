# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---

# RHEL Clustering - Deploy HANA cluster resources
# Azure ref: https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability-rhel

# @TODO Subscribe to subscriptions/repos if required
# This code assumes the deployment is using RHEL SAP image

# SAP HANA Cluster resources
# https://docs.microsoft.com/en-us/azure/virtual-machines/workloads/sap/sap-hana-high-availability-rhel#create-sap-hana-cluster-resources

# +------------------------------------4--------------------------------------*/

- name:                                "4.0.3 - SAP HANA SCALE OUT: Create list of all db hosts"
  ansible.builtin.set_fact:
    db_hosts:                          "{{ query('inventory_hostnames', '{{ sap_sid | upper }}_DB') }}"
    primary_site_hosts:                "{{ hostvars | dict2items | selectattr('value.site', 'defined') | selectattr('value.site', 'eq', 'SITE1') | map(attribute='key') }}"
    secondary_site_hosts:              "{{ hostvars | dict2items | selectattr('value.site', 'defined') | selectattr('value.site', 'eq', 'SITE2') | map(attribute='key') }}"
    all_hana_hosts:                    "{{ (hostvars | dict2items | selectattr('value.site', 'defined') | selectattr('value.site', 'eq', 'SITE1') | map(attribute='key') | list) + (hostvars | dict2items | selectattr('value.site', 'defined') | selectattr('value.site', 'eq', 'SITE2') | map(attribute='key') | list) }}"


- name:                                "5.5.4.1 HANA Cluster configuration - Optimise the Pacemaker cluster for SAP HANA"
  when:                                ansible_hostname == primary_instance_name
  block:
    - name:                            "5.5.4.1 HANA Cluster configuration - Get the cluster maintenance mode status"
      ansible.builtin.shell:           pcs property show maintenance-mode
      register:                        get_status_maintenance_mode
      changed_when:                    false
      ignore_errors:                   true

    - name:                            "5.5.4.1 HANA Cluster configuration - Set the cluster maintenance mode if not already in maintenance mode"
      when: >-
                                       get_status_maintenance_mode.stdout is not search('maintenance-mode') or
                                       get_status_maintenance_mode.stdout is search('maintenance-mode: false')
      ansible.builtin.shell:           pcs property set maintenance-mode=true

    - name:                            "5.5.4.1 HANA Cluster configuration - Check if the pacemaker package version is greater than pacemaker-2.0.4"
      when:                            ansible_distribution_major_version in ["8", "9"]
      ansible.builtin.set_fact:
        is_pcmk_ver_gt_204:            "{{ ansible_facts.packages['pacemaker'][0].version is version('2.0.4', '>') | default(false) }}"


    - name:                            "5.5.4.1 HANA Cluster configuration - Create SAP HANA resources for RHEL 7.x"
      when:                            ansible_distribution_major_version == "7"
      block:

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the HANA topology resource is created on RHEL 7"
          ansible.builtin.shell: >
                                       pcs resource create SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }} SAPHanaTopologyScaleOut \
                                         SID={{ db_sid | upper }} InstanceNumber={{ db_instance_number }} \
                                         op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
          register:                    sap_hana_topology
          failed_when:                 sap_hana_topology.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the HANA topology resource clone is created on RHEL 7"
          ansible.builtin.shell: >
                                       pcs resource clone SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }} \
                                         meta clone-node-max=1 interleave=true
          register:                    sap_hana_clone_topology
          failed_when:                 sap_hana_clone_topology.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the SAP HANA resource is created on RHEL 7"
          ansible.builtin.shell: >
                                       pcs resource create SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} SAPHanaController \
                                         SID={{ db_sid | upper }} InstanceNumber={{ db_instance_number }} PREFER_SITE_TAKEOVER=true DUPLICATE_PRIMARY_TIMEOUT=7200 AUTOMATED_REGISTER=false \
                                         op start interval=0 timeout=3600 op stop interval=0 timeout=3600 op promote interval=0 timeout=3600 \
                                         op monitor interval=60 role="Master" timeout=700 op monitor interval=61 role="Slave" timeout=700
          register:                    sap_hana
          failed_when:                 sap_hana.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the SAP HANA resource is created on RHEL 7"
          ansible.builtin.shell: >
                                       pcs resource master msl_SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} SAPHana__{{ db_sid | upper }}_{{ db_instance_number }} \
                                         meta master-max="1" clone-node-max=1 interleave=true
          register:                    sap_hana_master
          failed_when:                 sap_hana_master.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Create SAP HANA resources for RHEL 8.x and 9.x"
      when:                            ansible_distribution_major_version in ["8", "9"]
      block:

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the HANA topology resource is created on RHEL 8 & 9"
          ansible.builtin.shell: >
                                       pcs resource create SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }} SAPHanaTopology \
                                         SID={{ db_sid | upper }} InstanceNumber={{ db_instance_number }}  meta clone-node-max=1 interleave=true \
                                         op methods interval=0s timeout=5 \
                                         op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
          register:                    sap_hana_topology
          failed_when:                 sap_hana_topology.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the HANA topology resource clone is created on RHEL 8 & 9"
          ansible.builtin.shell: >
                                       pcs resource clone SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }} \
                                         meta clone-node-max=1 interleave=true
          register:                    sap_hana_clone_topology
          failed_when:                 sap_hana_clone_topology.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the SAP HANA resource is created on RHEL 8 & 9"
          ansible.builtin.shell: >
                                       pcs resource create SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} SAPHanaController \
                                         SID={{ db_sid | upper }} InstanceNumber={{ db_instance_number }} \
                                         PREFER_SITE_TAKEOVER=true DUPLICATE_PRIMARY_TIMEOUT=7200 AUTOMATED_REGISTER=false \
                                         op demote interval=0s timeout=320 op methods interval=0s timeout=5 \
                                         op start interval=0 timeout={{ cluster_sap_hana_timeouts.start }} \
                                         op stop interval=0 timeout={{ cluster_sap_hana_timeouts.stop }} \
                                         op promote interval=0 timeout={{ cluster_sap_hana_timeouts.promote }} \
                                         op monitor interval=60 role="Master" timeout={{ cluster_sap_hana_timeouts.monitor_master }} \
                                         op monitor interval=61 role="Slave" timeout={{ cluster_sap_hana_timeouts.monitor_slave }}
          register:                    sap_hana
          failed_when:                 sap_hana.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the SAP HANA resource is created on RHEL 8 & 9"
          ansible.builtin.shell: >
                                       pcs resource promotable  SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} \
                                         meta master-max="1" clone-node-max=1 interleave=true
          register:                    sap_hana_master
          failed_when:                 sap_hana_master.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Ensure the Virtual IP resource for the Load Balancer Front End IP is created"
      ansible.builtin.shell: >
                                       pcs resource create vip_{{ db_sid | upper }}_{{ db_instance_number }} \
                                         IPaddr2 ip="{{ database_loadbalancer_ip }}"
      register:                        vip
      failed_when:                     vip.rc > 1

    - name:                            "5.5.4.1 HANA Cluster configuration - Ensure the netcat resource for the Load Balancer Healthprobe is created"
      ansible.builtin.shell: >
                                       pcs resource create nc_{{ db_sid | upper }}_{{ db_instance_number }} azure-lb \
                                         port=625{{ db_instance_number }}
      register:                        netcat
      failed_when:                     netcat.rc > 1

    - name:                            "5.5.4.1 HANA Cluster configuration - Ensure the Virtual IP group resource is created"
      ansible.builtin.shell: >
                                       pcs resource group add g_ip_{{ db_sid | upper }}_{{ db_instance_number }} \
                                         nc_{{ db_sid | upper }}_{{ db_instance_number }} vip_{{ db_sid | upper }}_{{ db_instance_number }}
      register:                        vip_g
      failed_when:                     vip_g.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Create constraints for SAP HANA and Virtual IP for RHEL 7.x"
      when:                            ansible_distribution_major_version == "7"
      block:
        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the order constraint for the SAP HANA Topology is configured on RHEL 7"
          ansible.builtin.shell: >
                                       pcs constraint order SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone then \
                                         msl_SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}
          register:                    constraint
          failed_when:                 constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the Virtual IP group is configured to the Master node on RHEL 7"
          ansible.builtin.shell: >
                                       pcs constraint colocation add g_ip_{{ db_sid | upper }}_{{ db_instance_number }} with \
                                         master msl_SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} 4000
          register:                    constraint
          failed_when:                 constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - HANA resources are only allowed to run on a node, if the node's NFS file systems are mounted. The constraint also avoids the majority maker node RHEL 7"
          ansible.builtin.shell: >
                                       pcs constraint location colocation add SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone \
                                         rule resource-discovery=never score=-INFINITY hana_nfs_s1_active ne true and hana_nfs_s2_active ne true
          register:                    constraint
          failed_when:                 constraint.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Create constraints for SAP HANA and Virtual IP for RHEL 8.x and 9.x"
      when:                            ansible_distribution_major_version in ["8", "9"]
      block:

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the order constraint for the SAP HANA Topology is configured on RHEL 8 or 9"
          ansible.builtin.shell: >
                                       pcs constraint order SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone then \
                                         SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}-clone symmetrical=false
          register:                    constraint
          failed_when:                 constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the Virtual IP group is configured to the Master node on RHEL 8 or 9"
          ansible.builtin.shell: >
                                       pcs constraint colocation add g_ip_{{ db_sid | upper }}_{{ db_instance_number }} with \
                                         master SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}-clone 4000
          register:                    constraint
          failed_when:                 constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - HANA resources are only allowed to run on a node, if the node's NFS file systems are mounted. The constraint also avoids the majority maker node RHEL 7"
          ansible.builtin.shell: >
                                       pcs constraint location SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone \
                                         rule resource-discovery=never score=-INFINITY hana_nfs_s1_active ne true and hana_nfs_s2_active ne true
          register:                    constraint
          failed_when:                 constraint.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Add resource defaults resource-stickiness=1000"
      ansible.builtin.shell:           pcs resource defaults resource-stickiness=1000
      register:                        resource_defaults
      failed_when:                     resource_defaults.rc > 1

    - name:                            "5.5.4.1 HANA Cluster configuration - Add resource defaults migration-threshold=5000"
      ansible.builtin.shell:           pcs resource defaults migration-threshold=5000
      register:                        resource_defaults
      failed_when:                     resource_defaults.rc > 1

    - name:                            "Backward Compatibility - Check required Database HA variables"
      ansible.builtin.set_fact:
        database_high_availability:    "{{ db_high_availability | default(false) }}"
      when:
        - db_high_availability is defined
        - database_high_availability is not defined

    # for two node clusters set properties
    - name:                            "5.5.4.1 HANA Cluster configuration - Set the cluster properties for two node clusters"
      when:
        - database_high_availability
        - not database_scale_out
        - is_pcmk_ver_gt_204
      block:
        - name:                        "5.5.4.1 HANA Cluster configuration - set resource defaults 'priority'"
          ansible.builtin.shell:       pcs resource defaults update priority=1
          register:                    update_priority
          failed_when:                 update_priority.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - set SAPHana defaults 'priority' to 10"
          ansible.builtin.shell:       pcs resource update SAPHana_{{ db_sid | upper }}_{{ db_instance_number }} meta priority=10
          register:                    update_priority_saphana

        - name:                        "5.5.4.1 HANA Cluster configuration - set priority-fencing-delay"
          ansible.builtin.shell:       pcs property set priority-fencing-delay=15s
          register:                    constraint
          failed_when:                 constraint.rc > 1

    - name:                            "5.5.4.1 HANA Cluster configuration - Configure cluster constraints for SAP HANA and AFS"
      when:
                                       - database_high_availability
                                       - NFS_provider == "AFS"
                                       - hana_shared_mountpoint is defined
                                       - hana_shared_mountpoint | length > 1
      block:
        - name:                        "5.5.4.1 HANA Cluster configuration - /hana/shared file system for site 1"
          ansible.builtin.shell:  >
                                       pcs resource create fs_hana_shared_s1 --disabled ocf:heartbeat:Filesystem \
                                         device={{ hana_shared_mountpoint[0] }}  directory=/hana/shared \
                                         fstype=nfs options='defaults,rw,hard,proto=tcp,noatime,nfsvers=4.1,lock' fast_stop=no \
                                         op monitor interval=20s on-fail=fence timeout=120s OCF_CHECK_LEVEL=20 \
                                         op start interval=0 timeout=120 op stop interval=0 timeout=120

          register:                    shared_site1
          failed_when:                 shared_site1.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - clone the /hana/shared file system resources for both site1 and site2"
          ansible.builtin.shell:       pcs resource clone fs_hana_shared_s1 meta clone-node-max=1 interleave=true
          register:                    clone_site1
          failed_when:                 clone_site1.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - /hana/shared file system for site 2"
          ansible.builtin.shell:  >
                                       pcs resource create fs_hana_shared_s2 --disabled ocf:heartbeat:Filesystem \
                                         device={{ hana_shared_mountpoint[1] }}  directory=/hana/shared \
                                         fstype=nfs options='defaults,rw,hard,proto=tcp,noatime,nfsvers=4.1,lock' fast_stop=no \
                                         op monitor interval=20s on-fail=fence timeout=120s OCF_CHECK_LEVEL=20 \
                                         op start interval=0 timeout=120 op stop interval=0 timeout=120
          register:                    shared_site2
          failed_when:                 shared_site2.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - clone the /hana/shared file system resources for both site1 and site2"
          ansible.builtin.shell:       pcs resource clone fs_hana_shared_s2 meta clone-node-max=1 interleave=true
          register:                    clone_site2
          failed_when:                 clone_site2.rc > 1

        # All SAP HANA DB nodes on replication site 1 are assigned attribute S1, and all SAP HANA DB nodes on
        # replication site 2 are assigned attribute S2.
        - name:                        "5.5.4.1 HANA Cluster configuration - Set Attributes for Site 1"
          ansible.builtin.shell:       pcs node attribute {{ item }} NFS_SID_SITE=S1
          with_items:                  "{{ primary_site_hosts }}"


        - name:                        "5.5.4.1 HANA Cluster configuration - Set Attributes for Site 2"
          ansible.builtin.shell:       pcs node attribute {{ item }} NFS_SID_SITE=S2
          with_items:                  "{{ secondary_site_hosts }}"

        - name:                        "5.5.4.1 HANA Cluster configuration - Set Location for Site 1"
          ansible.builtin.shell:       pcs constraint location fs_hana_shared_s1-clone rule resource-discovery=never score=-INFINITY NFS_SID_SITE ne S1

        - name:                        "5.5.4.1 HANA Cluster configuration - Set Location for Site 2"
          ansible.builtin.shell:       pcs constraint location fs_hana_shared_s2-clone rule resource-discovery=never score=-INFINITY NFS_SID_SITE ne S2

        - name:                        "5.5.4.1 HANA Cluster configuration - Enable the file system resources for site 1"
          ansible.builtin.shell:       pcs resource enable fs_hana_shared_s1

        - name:                        "5.5.4.1 HANA Cluster configuration - Enable the file system resources for site 2"
          ansible.builtin.shell:       pcs resource enable fs_hana_shared_s2

    - name:                            "5.5.4.1 HANA Cluster configuration - Configure cluster constraints for SAP HANA and ANF"
      when:
                                       - database_high_availability
                                       - NFS_provider == "ANF"
                                       - hana_data_mountpoint is defined
                                       - hana_data_mountpoint | length > 1
                                       - hana_log_mountpoint is defined
                                       - hana_log_mountpoint | length > 1
                                       - hana_shared_mountpoint is defined
                                       - hana_shared_mountpoint | length > 1
      block:
        - name:                        "5.5.4.1 HANA Cluster configuration - configure constraints between SAP HANA resources and NFS mounts"
          ansible.builtin.shell: >
                                       pcs constraint location SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone \
                                         rule score=-INFINITY attr_hana_{{ db_sid | upper }}_NFS_1_active ne true and attr_hana_{{ db_sid | upper }}_NFS_2_active ne true
          register:                    constraint
          failed_when:                 constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - configure constraints on RHEL 7.x"
          ansible.builtin.shell: >
                                       pcs constraint location SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}-master rule \
                                         score=-INFINITY attr_hana_{{ db_sid | upper }}_NFS_1_active ne true and attr_hana_{{ db_sid | upper }}_NFS_2_active ne true
          register:                    constraint
          failed_when:                 constraint.rc > 1
          when: ansible_distribution_major_version == "7"

        - name:                        "5.5.4.1 HANA Cluster configuration - configure constraints on RHEL 8.x or 9.x"
          when: ansible_distribution_major_version in ["8", "9"]
          block:
            - name:                    "5.5.4.1 HANA Cluster configuration - configure location constraints on RHEL 8.x or 9.x"
              ansible.builtin.shell: >
                                       pcs constraint location SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}-clone \
                                         rule score=-INFINITY attr_hana_{{ db_sid | upper }}_NFS_1_active ne true and attr_hana_{{ db_sid | upper }}_NFS_2_active ne true
              register:                constraint
              failed_when:             constraint.rc > 1

            - name:                    "5.5.4.1 HANA Cluster configuration - configure ordering constraints for SAPHana clone RHEL 8.x or 9.x"
              ansible.builtin.shell: >
                                       pcs constraint order stop SAPHana_{{ db_sid | upper }}_{{ db_instance_number }}-clone then stop {{ item.group_name }} symmetrical=false
              register:                constraint
              loop:
                - { group_name: 'g_hana_{{ db_sid | upper }}_NFS_1' }
                - { group_name: 'g_hana_{{ db_sid | upper }}_NFS_2' }
              loop_control:
                loop_var:              item
              failed_when:             constraint.rc > 1

            - name:                    "5.5.4.1 HANA Cluster configuration - configure ordering constraints for SAPHANA topology clone RHEL 8.x or 9.x"
              ansible.builtin.shell: >
                                       pcs constraint order stop SAPHanaTopology_{{ db_sid | upper }}_{{ db_instance_number }}-clone then stop {{ item.group_name }} symmetrical=false
              register:                constraint
              loop:
                - { group_name: 'g_hana_{{ db_sid | upper }}_NFS_1' }
                - { group_name: 'g_hana_{{ db_sid | upper }}_NFS_2' }
              loop_control:
                loop_var:              item
              failed_when:             constraint.rc > 1

    # HANA active/active
    - name:                            "5.5.4.1 HANA Cluster configuration - Configure HANA active/read-enabled system replication"
      when:
                                       - database_active_active | default(false)
                                       - not (db_scale_out | default(false))
      block:
        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the Active/Active netcat resource for the Load Balancer Healthprobe is created"
          ansible.builtin.shell:       pcs resource create secnc_{{ db_sid | upper }}_{{ db_instance_number }} azure-lb port=626{{ db_instance_number }}
          register:                    sec_netcat
          failed_when:                 sec_netcat.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the Active/Active Virtual IP resource for the Load Balancer Front End IP is created"
          ansible.builtin.shell:       pcs resource create secvip_{{ db_sid | upper }}_{{ db_instance_number }} IPaddr2 ip="{{ database_active_active_loadbalancer_ip }}"
          register:                    sec_vip
          failed_when:                 sec_vip.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Ensure the Active/Active Virtual IP group resource is created"
          ansible.builtin.shell:       pcs resource group add g_secip_{{ db_sid | upper }}_{{ db_instance_number }} secnc_{{ db_sid | upper }}_{{ db_instance_number }} secvip_{{ db_sid | upper }}_{{ db_instance_number }}
          register:                    sec_vip_g
          failed_when:                 sec_vip_g.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Configure constraints between g_secip_SID_XX"
          ansible.builtin.shell:       pcs constraint location  g_secip_{{ db_sid | upper }}_{{ db_instance_number }} rule score=INFINITY hana_{{ db_sid | lower }}_sync_state eq SOK and hana_{{ db_sid | lower }}_roles eq 4:S:master1:master:worker:master
          register:                    sec_constraint
          failed_when:                 sec_constraint.rc > 1

        - name:                        "5.5.4.1 HANA Cluster configuration - Configure constraints between g_secip_SID_XX"
          ansible.builtin.shell:       pcs constraint location  g_secip_{{ db_sid | upper }}_{{ db_instance_number }} rule score=4000 hana_{{ db_sid | lower }}_sync_state eq PRIM and hana_{{ db_sid | lower }}_roles eq 4:P:master1:master:worker:master
          register:                    sec_constraint
          failed_when:                 sec_constraint.rc > 1

        # https://learn.microsoft.com/en-us/azure/sap/workloads/sap-hana-high-availability-rhel?tabs=lb-portal#add-a-secondary-virtual-ip-address-resource-for-an-activeread-enabled-setup
        # Set the priority to primary IPaddr2 and azure-lb resource if priority-fencing-delay is configured
        - name:                        "5.5.4.1 HANA Cluster configuration - Set priority for the Virtual IP and azure-lb resources"
          when:
                                       - database_active_active | default(false)
                                       - not (db_scale_out | default(false))
                                       - is_pcmk_ver_gt_204
          block:
            - name:                    "5.5.4.1 HANA Cluster configuration - Set priority for the Virtual IP resource"
              ansible.builtin.shell:   pcs resource update vip_{{ db_sid | upper }}_{{ db_instance_number }} meta priority=5
              register:                update_priority_vip
              failed_when:             update_priority_vip.rc > 1

            - name:                    "5.5.4.1 HANA Cluster configuration - Set priority for the azure-lb resource"
              ansible.builtin.shell:   pcs resource update nc_{{ db_sid | upper }}_{{ db_instance_number }} meta priority=5
              register:                update_priority_nc
              failed_when:             update_priority_nc.rc > 1


    - name:                            "5.5.4.1 HANA Cluster configuration - Disable Maintenance mode for the cluster"
      ansible.builtin.shell:           pcs property set maintenance-mode=false

    - name:                            "5.5.4.1 HANA Cluster configuration - Wait until cluster has stabilized on RHEL 7"
      ansible.builtin.shell:           set -o pipefail && pcs status | grep '^Online:'
      register:                        cluster_stable_check
      retries:                         12
      delay:                           10
      until:                           "(primary_instance_name + ' ' + secondary_instance_name) in cluster_stable_check.stdout or (secondary_instance_name + ' ' + primary_instance_name) in cluster_stable_check.stdout"
      when:                            ansible_distribution_major_version != "8" and ansible_distribution_major_version != "9"

    # '*' is a special character in regexp and needs to be escaped for literal matching
    # if we are worried about character spacing across distros we can match for '\* Online:'
    - name:                            "5.5.4.1 HANA Cluster configuration - Wait until cluster has stabilized on RHEL 8 and RHEL 9"
      ansible.builtin.shell:           set -o pipefail && pcs status | grep '^  \* Online:'
      register:                        cluster_stable_check
      retries:                         12
      delay:                           10
      until:                           "(primary_instance_name + ' ' + secondary_instance_name) in cluster_stable_check.stdout or (secondary_instance_name + ' ' + primary_instance_name) in cluster_stable_check.stdout"
      when:                            ansible_distribution_major_version in ["8", "9"]


    # the leading spaces are irrelevant here as we are looking for *<space>Started:
    - name:                            "5.5.4.1 HANA Cluster configuration - Ensure Cluster resources are started on RHEL 7"
      ansible.builtin.shell:           set -o pipefail && pcs resource show | grep '    Started:'
      register:                        hana_cluster_resource_check
      retries:                         12
      delay:                           10
      until:                           "(primary_instance_name + ' ' + secondary_instance_name) in hana_cluster_resource_check.stdout or (secondary_instance_name + ' ' + primary_instance_name) in hana_cluster_resource_check.stdout"
      when:                            ansible_distribution_major_version != "8" and ansible_distribution_major_version != "9"

    - name:                            "5.5.4.1 HANA Cluster configuration - Ensure Cluster resources are started on RHEL 8 or 9"
      ansible.builtin.shell:           set -o pipefail && pcs resource status | grep '\* Started:'
      register:                        hana_cluster_resource_check
      retries:                         12
      delay:                           10
      until:                           "(primary_instance_name + ' ' + secondary_instance_name) in hana_cluster_resource_check.stdout or (secondary_instance_name + ' ' + primary_instance_name) in hana_cluster_resource_check.stdout"
      when:                            ansible_distribution_major_version in ["8", "9"]

# End of HANA clustering resources

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - BEGIN                                |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
# Follow steps described in https://access.redhat.com/solutions/7029705

- name:                                "5.5.4.1 HANA Cluster configuration - check if the OS version is RHEL 8.2 or newer"
  ansible.builtin.set_fact:
    is_rhel_82_or_newer:               "{{ ansible_distribution_version is version('8.2', '>=') | default(false) }}"

- name:                                "5.5.4.1 HANA Cluster configuration - (systemd) Creating drop-in file"
  become:                              true
  when:
                                       - is_rhel_82_or_newer is defined
                                       - is_rhel_82_or_newer
  block:
    - name:                            "5.5.4.1 HANA Cluster configuration - (systemd) Create override directory"
      ansible.builtin.file:
        path:                          /etc/systemd/system/pacemaker.service.d
        state:                         directory
        owner:                         root
        group:                         root
        mode:                          '0755'

    - name:                            "5.5.4.1 HANA Cluster configuration - (systemd) Create drop-in file"
      ansible.builtin.copy:
        content: |-
          [Unit]
          Description=Pacemaker needs the SAP HANA instance service
          Wants=SAP{{ db_sid | upper }}_{{ db_instance_number }}.service
          After=SAP{{ db_sid | upper }}_{{ db_instance_number }}.service
        dest:                          /etc/systemd/system/pacemaker.service.d/00-pacemaker.conf
        owner:                         root
        group:                         root
        mode:                          '0644'
      register:                        dropinfile

    - name:                            "5.5.4.1 HANA Cluster configuration - systemd reload"
      when: dropinfile.changed
      ansible.builtin.systemd:
        daemon_reload:                 true

# /*---------------------------------------------------------------------------8
# |                                                                            |
# | Systemd-Based SAP Startup Framework - END                                  |
# |                                                                            |
# +------------------------------------4--------------------------------------*/
