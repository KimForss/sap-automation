# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |      This pipeline removes the SAP systems, the workload zone (landscape)  |
# |      using Terraform.                                                      |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

parameters:
  - name:                              cleanup_sap
    displayName:                       Remove the SAP system
    type:                              boolean
    default:                           true

  - name:                              sap_system
    displayName:                       "SAP System configuration name, use this format: ENV-LOCA-VNET-SID"
    type:                              string
    default:                           DEV-WEEU-SAP01-X00

  - name:                              cleanup_zone
    displayName:                       Remove the SAP workload zone
    type:                              boolean
    default:                           true

  - name:                              workload_zone
    displayName:                       "Workload zone configuration name, use the following syntax: ENV-LOCA-VNET-INFRASTRUCTURE"
    type:                              string
    default:                           TEST-SECE-SAP02-INFRASTRUCTURE

  - name:                              workload_zone_name
    displayName:                       "Workload zone configuration name, use the following syntax: ENV-LOCA-VNET"
    type:                              string
    default:                           TEST-SECE-SAP02

  - name:                              control_plane_name
    displayName:                       "Control plane name, use the following syntax: ENV-LOCA-VNET"
    type:                              string
    default:                           CPLN-NOEU-DEP01

  - name:                              use_deployer
    displayName:                       Run removal on self hosted agent
    type:                              boolean
    default:                           true

  - name:                              sap_automation_repo_path
    displayName:                       The local path on the agent where the sap_automation repo can be found
    type:                              string

  - name:                              config_repo_path
    displayName:                       The local path on the agent where the config repo can be found
    type:                              string

stages:
  - stage:                             Remove_SAP_systems
    displayName:                       "Removing the SAP System"
    condition:                         and(not(failed()), not(canceled()), eq(${{ parameters.cleanup_sap }}, true))
    variables:
      - template:                      variables/10-remover-terraform-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          workload_zone_name:          ${{ parameters.workload_zone_name }}
          workload_zone:               ${{ parameters.workload_zone }}
          sap_system:                  ${{ parameters.sap_system }}
    jobs:
      - job:                           Remove_SAP_systems
        displayName:                   "Removing the SAP System"
        variables:
          - group:                     SDAF-${{ parameters.workload_zone_name }}
        workspace:
          clean:                       all
        steps:
          - template: templates\download.yaml
          - task:                      PostBuildCleanup@4
          - bash: |
              #!/bin/bash
              # Exit immediately if a command exits with a non-zero status.
              set -e


              if [ "${WL_ARM_SUBSCRIPTION_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(WL_ARM_SUBSCRIPTION_ID)"
              else
                test=$(printenv ARM_SUBSCRIPTION_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$ARM_SUBSCRIPTION_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_CLIENT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(ARM_CLIENT_ID)"
              else
                test=$(printenv ARM_CLIENT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]$ARM_CLIENT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_CLIENT_SECRET:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$(ARM_CLIENT_SECRET)"
              else
                test=$(printenv ARM_CLIENT_SECRET)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$ARM_CLIENT_SECRET"
                else
                  echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_TENANT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$(ARM_TENANT_ID)"
              else
                test=$(printenv ARM_TENANT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$ARM_TENANT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_OBJECT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]$(ARM_OBJECT_ID)"
              else
                test=$(printenv ARM_OBJECT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]$ARM_OBJECT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]"
                fi
              fi
            env:
              WL_ARM_SUBSCRIPTION_ID:  $(ARM_SUBSCRIPTION_ID)
              WL_ARM_CLIENT_ID:        $(ARM_CLIENT_ID),
              WL_ARM_CLIENT_SECRET:    $(ARM_CLIENT_SECRET)
              WL_ARM_TENANT_ID:        $(ARM_TENANT_ID)
              WL_ARM_OBJECT_ID:        $(ARM_OBJECT_ID)
            name:                      ParameterValidation
            displayName:               Parameter Validation
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/10-remover-terraform-system.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"

            displayName:               "Remove SAP system"
            env:
              APPLICATION_CONFIGURATION_ID: $(APPLICATION_CONFIGURATION_ID)
              ARM_CLIENT_ID:                $(ParameterValidation.ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:            $(ParameterValidation.ARM_CLIENT_SECRET)
              ARM_OBJECT_ID:                $(ParameterValidation.ARM_OBJECT_ID)
              ARM_SUBSCRIPTION_ID:          $(ParameterValidation.ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID:                $(ParameterValidation.ARM_TENANT_ID)
              AZURE_DEVOPS_EXT_PAT:         $(System.AccessToken)
              CONFIG_REPO_PATH:             ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              CONTROL_PLANE_NAME:           ${{ parameters.control_plane_name }}
              SYSTEM_ACCESSTOKEN:           $(System.AccessToken)
              SAP_AUTOMATION_REPO_PATH:     ${{ parameters.sap_automation_repo_path }}
              USE_MSI:                      $(Use_MSI)

  - stage:                             Remove_SAP_workload_zone
    displayName:                       "Removing the SAP workload zone"
    condition:                         and(not(failed()), not(canceled()), eq(${{ parameters.cleanup_zone }}, true))
    variables:
      - template:                      variables/10-remover-terraform-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          workload_zone_name:          ${{ parameters.workload_zone_name }}
          workload_zone:               ${{ parameters.workload_zone }}
          sap_system:                  ${{ parameters.sap_system }}

    jobs:
      - job:                           Remove_SAP_workload_zone
        displayName:                   Remove the SAP Workload Zone
        variables:
          - group:                     SDAF-${{ parameters.workload_zone_name }}
        workspace:
          clean:                       all
        steps:
          - template:                  templates\download.yaml
          - task:                      PostBuildCleanup@4
          - bash: |
              #!/bin/bash
              # Exit immediately if a command exits with a non-zero status.
              set -e


              if [ "${WL_ARM_SUBSCRIPTION_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(WL_ARM_SUBSCRIPTION_ID)"
              else
                test=$(printenv ARM_SUBSCRIPTION_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$ARM_SUBSCRIPTION_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_CLIENT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(ARM_CLIENT_ID)"
              else
                test=$(printenv ARM_CLIENT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]$ARM_CLIENT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_CLIENT_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_CLIENT_SECRET:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$(ARM_CLIENT_SECRET)"
              else
                test=$(printenv ARM_CLIENT_SECRET)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$ARM_CLIENT_SECRET"
                else
                  echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_TENANT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$(ARM_TENANT_ID)"
              else
                test=$(printenv ARM_TENANT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$ARM_TENANT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]"
                fi
              fi

              if [ "${WL_ARM_OBJECT_ID:0:2}" == '$(' ]; then
                echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]$(ARM_OBJECT_ID)"
              else
                test=$(printenv ARM_OBJECT_ID)
                if [ -n "$test" ]; then
                  echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]$ARM_OBJECT_ID"
                else
                  echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]"
                fi
              fi
            env:
              WL_ARM_SUBSCRIPTION_ID:  $(ARM_SUBSCRIPTION_ID)
              WL_ARM_CLIENT_ID:        $(ARM_CLIENT_ID),
              WL_ARM_CLIENT_SECRET:    $(ARM_CLIENT_SECRET)
              WL_ARM_TENANT_ID:        $(ARM_TENANT_ID)
              WL_ARM_OBJECT_ID:        $(ARM_OBJECT_ID)
            name:                      ParameterValidation
            displayName:               Parameter Validation
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/10-remover-terraform-workload-zone.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"
            displayName:               Remove SAP workload_zone
            env:
              APPLICATION_CONFIGURATION_ID: $(APPLICATION_CONFIGURATION_ID)
              ARM_CLIENT_ID:                $(ParameterValidation.ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:            $(ParameterValidation.ARM_CLIENT_SECRET)
              ARM_OBJECT_ID:                $(ParameterValidation.ARM_OBJECT_ID)
              ARM_SUBSCRIPTION_ID:          $(ParameterValidation.ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID:                $(ParameterValidation.ARM_TENANT_ID)
              AZURE_DEVOPS_EXT_PAT:         $(System.AccessToken)
              CONFIG_REPO_PATH:             ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              CONTROL_PLANE_NAME:           ${{ parameters.control_plane_name }}
              SAP_AUTOMATION_REPO_PATH:     ${{ parameters.sap_automation_repo_path }}
              SYSTEM_ACCESSTOKEN:           $(System.AccessToken)
              USE_MSI:                      $(Use_MSI)
