# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |               This pipeline deploys the Workload Zone                      |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

parameters:
  - name:                              workload_zone
    displayName:                       "Workload zone configuration name, use the following syntax: ENV-LOCA-VNET-INFRASTRUCTURE"
    type:                              string
    default:                           DEV-WEEU-SAP01-INFRASTRUCTURE

  - name:                              workload_zone_name
    displayName:                       "Workload zone configuration name, use the following syntax: ENV-LOCA-VNET"
    type:                              string
    default:                           DEV-WEEU-SAP01

  - name:                              control_plane_name
    displayName:                       "Control plane name, use the following syntax: ENV-LOCA-VNET"
    type:                              string
    default:                           CPLN-NOEU-DEP01

  - name:                              inherit_settings
    displayName:                       Inherit Terraform state file information from control plane
    type:                              boolean
    default:                           true

  - name:                              sap_automation_repo_path
    displayName:                       The local path on the agent where the sap_automation repo can be found
    type:                              string

  - name:                              config_repo_path
    displayName:                       The local path on the agent where the config repo can be found
    type:                              string

  - name:                              test
    type:                              boolean
    default:                           false

stages:
  - stage: Deploy_SAP_workload_zone
    condition: and(not(failed()), not(canceled()))
    displayName: Deploy SAP workload zone
    variables:
      - template:                      variables/02-sap-workload-zone-variables.yaml
        parameters:
          workload_zone:               ${{ parameters.workload_zone }}
          workload_zone_name:          ${{ parameters.workload_zone_name }}
          control_plane_name:          ${{ parameters.control_plane_name }}
          inherit_settings:            ${{ parameters.inherit_settings }}
    jobs:
      - job:                           Deploy_SAP_workload_zone
        displayName:                   Deploy SAP workload zone
        workspace:
          clean:                       all
        steps:
          - template:                  templates\download.yaml
          - task:                      PostBuildCleanup@4
          - bash: |
              #!/bin/bash
              # Exit immediately if a command exits with a non-zero status.
              set -e
              if ["${WL_ARM_SUBSCRIPTION_ID:0:2}" == '$(']; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(WL_ARM_SUBSCRIPTION_ID)"
              else
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]''"
              fi
              if ["${WL_ARM_CLIENT_ID:0:2}" == '$(']; then
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]$(ARM_CLIENT_ID)"
              else
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;isOutput=true]''"
              fi
              if ["${WL_ARM_CLIENT_SECRET:0:2}" == '$(']; then
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]$(ARM_CLIENT_SECRET)"
              else
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;isOutput=true]''"
              fi
              if ["${WL_ARM_TENANT_ID:0:2}" == '$(']; then
                echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]$(ARM_TENANT_ID)"
              else
                echo "##vso[task.setvariable variable=ARM_TENANT_ID;isOutput=true]''"
              fi
              if ["${WL_ARM_OBJECT_ID:0:2}" == '$(']; then
                echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]$(ARM_OBJECT_ID)"
              else
                echo "##vso[task.setvariable variable=ARM_OBJECT_ID;isOutput=true]''"
              fi
            env:
              WL_ARM_SUBSCRIPTION_ID:  $(WL_ARM_SUBSCRIPTION_ID)
              WL_ARM_CLIENT_ID:        $(WL_ARM_CLIENT_ID),
              WL_ARM_CLIENT_SECRET:    $(WL_ARM_CLIENT_SECRET)
              WL_ARM_TENANT_ID:        $(WL_ARM_TENANT_ID)
              WL_ARM_OBJECT_ID:        $(WL_ARM_OBJECT_ID)
            name:                      ParameterValidation
            displayName:               Parameter Validation
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/02-sap-workload-zone.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"
            displayName:               Deploy SAP Workload Zone
            env:
              SYSTEM_ACCESSTOKEN:           $(System.AccessToken)
              ARM_CLIENT_ID:                $(ParameterValidation.ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:            $(ParameterValidation.ARM_CLIENT_SECRET)
              ARM_TENANT_ID:                $(ParameterValidation.ARM_TENANT_ID)
              ARM_OBJECT_ID:                $(ParameterValidation.ARM_OBJECT_ID)
              ARM_SUBSCRIPTION_ID:          $(ParameterValidation.ARM_SUBSCRIPTION_ID)
              CP_ARM_CLIENT_ID:             $(CP_ARM_CLIENT_ID)
              CP_ARM_CLIENT_SECRET:         $(CP_ARM_CLIENT_SECRET)
              CP_ARM_TENANT_ID:             $(CP_ARM_TENANT_ID)
              CP_ARM_OBJECT_ID:             $(CP_ARM_OBJECT_ID)
              FENCING_SPN_PWD:              $(FENCING_SPN_PWD)
              SAPBITS:                      $(INSTALLATION_MEDIA_ACCOUNT)
              TEST_ONLY:                    ${{ parameters.test }}
              AZURE_DEVOPS_EXT_PAT:         $(System.AccessToken)
              TF_LOG:                       $(TF_LOG)
              TF_IN_AUTOMATION:             true
              SAP_AUTOMATION_REPO_PATH:     ${{ parameters.sap_automation_repo_path }}
              CONFIG_REPO_PATH:             ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              LOGON_USING_SPN:              $(Logon_Using_SPN)
              USE_MSI:                      $(Use_MSI)
              CONTROL_PLANE_NAME:           ${{ parameters.control_plane_name }}
              APPLICATION_CONFIGURATION_ID: $(APPLICATION_CONFIGURATION_ID)
