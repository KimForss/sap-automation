# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

---
# /*---------------------------------------------------------------------------8
# |                                                                            |
# |               This pipeline deploys the control plane                      |
# |                                                                            |
# +------------------------------------4--------------------------------------*/

parameters:
  - name:                              control_plane_name
    displayName:                       "Control Plane configuration name, use the following syntax: ENV-LOCA-VNET"
    type:                              string
    default:                           MGMT-WEEU-DEP01

  - name:                              use_deployer
    displayName:                       Run on self hosted agent
    type:                              boolean
    default:                           false

  - name:                              sap_automation_repo_path
    displayName:                       The local path on the agent where the sap_automation repo can be found
    type:                              string

  - name:                              config_repo_path
    displayName:                       The local path on the agent where the config repo can be found
    type:                              string

  - name:                              connection_name
    displayName:                       Service Connection Name
    type:                              string

  - name:                              force_reset
    displayName:                       Force a re-install - may require multiple re-runs
    type:                              boolean

  - name:                              test
    type:                              boolean
    default:                           false
stages:
  - stage:                             Prepare_Deployer
    condition:                         and(not(failed()), not(canceled()))
    variables:
      - template:                      variables/01-deploy-control-plane-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          force_reset:                 ${{ parameters.force_reset }}
    displayName:                       Prepare the self hosted agent(s)

    jobs:
      - job:                           Prepare_Deployer
        displayName:                   Prepare the self hosted agent
        workspace:
          clean:                       all
        steps:
          - template:                  templates\download.yaml
          - task:                      PostBuildCleanup@4
          - task:                      TerraformInstaller@1
            displayName:               Install Terraform
            inputs:
              terraformVersion:        latest
          # Set Variables.
          - task:                      AzureCLI@2
            continueOnError:           false
            inputs:
              azureSubscription:       ${{parameters.connection_name}}
              scriptType:              bash
              scriptLocation:          'scriptPath'
              scriptPath:              $(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/01-control-plane-prepare.sh
              addSpnToEnvironment:     true
              visibleAzLogin:          false
              failOnStandardError:     false

            displayName: Prepare control plane
            env:
              APP_REGISTRATION_APP_ID:        $(APP_REGISTRATION_APP_ID)
              ARM_CLIENT_ID:                  $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:              $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID:            $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID:                  $(ARM_TENANT_ID)
              AZURE_DEVOPS_EXT_PAT:           $(System.AccessToken)
              CONFIG_REPO_PATH:               ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              CONTROL_PLANE_NAME:             $(control_plane_name)
              DEPLOYER_TFSTATE_KEY:           "${{ parameters.deployer }}.terraform.tfstate"
              FORCE_RESET:                    ${{ lower(parameters.force_reset) }}
              IS_PIPELINE_DEPLOYMENT:         true
              LOGON_USING_SPN:                $(Logon_Using_SPN)
              POOL:                           $(POOL)
              SAP_AUTOMATION_REPO_PATH:       ${{ parameters.sap_automation_repo_path }}
              SYSTEM_ACCESSTOKEN:             $(System.AccessToken)
              TF_IN_AUTOMATION:               true
              TF_LOG:                         $(TF_LOG)
              TF_VAR_agent_ado_url:           $(System.CollectionUri)
              TF_VAR_agent_pat:               $(System.AccessToken)
              TF_VAR_agent_pool:              $(POOL)
              TF_VAR_agent_ado_project:       $(System.TeamProject)
              TF_VAR_ansible_core_version:    $(ansible_core_version)
              TF_VAR_spn_id:                  $(ARM_OBJECT_ID)
              TF_VAR_tf_version:              $(tf_version)
              TF_VAR_app_registration_app_id: $(APP_REGISTRATION_APP_ID)
              USE_MSI:                        $(Use_MSI)
              WEB_APP_CLIENT_SECRET:          $(WEB_APP_CLIENT_SECRET)
              keyvault:                       $(DEPLOYER_KEYVAULT)
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/01-control-plane-permission-pipelines.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"
            name:                      PermissionPipelines
            displayName:               Permission the pipelines
            env:
              AZURE_DEVOPS_EXT_PAT:     $(System.AccessToken)
              CONFIG_REPO_PATH:         ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              SAP_AUTOMATION_REPO_PATH: ${{ parameters.sap_automation_repo_path }}
              SYSTEM_ACCESSTOKEN:       $(System.AccessToken)
              AGENT_POOL:               $(POOL)
  - stage:                             PopulateKeyVault
    dependsOn:
      - Prepare_Deployer
    pool:                              $(this_agent)
    displayName:                       Save the Deployment Credentials in Azure Keyvault
    variables:
      - template:                      variables/01-deploy-control-plane-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          force_reset:                 ${{ parameters.force_reset }}
    jobs:
      - job:                           SaveDeploymentCredentials
        displayName:                   Save the Deployment Credentials
        workspace:
          clean:                       all
        steps:
          - task:                      PostBuildCleanup@4
          - task:                      TerraformInstaller@1
            displayName:               Install Terraform
            inputs:
              terraformVersion:        latest
          - template:                  templates\download.yaml
            parameters:
              getLatestFromBranch: true
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/00-store-secrets-in-keyvault.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"
            name:                      StoreSecrets_v2
            displayName:               Store deployment credentials in Key Vault (v2)
            env:
              ARM_CLIENT_ID:                $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:            $(ARM_CLIENT_SECRET)
              ARM_OBJECT_ID:                $(ARM_OBJECT_ID)
              ARM_SUBSCRIPTION_ID:          $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID:                $(ARM_TENANT_ID)
              AZURE_DEVOPS_EXT_PAT:         $(System.AccessToken)
              CONFIG_REPO_PATH:             ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              SAP_AUTOMATION_REPO_PATH:     ${{ parameters.sap_automation_repo_path }}
              SYSTEM_ACCESSTOKEN:           $(System.AccessToken)
              USE_MSI:                      $(Use_MSI)
              ZONE:                         $(control_plane_name)


  - stage:                             Deploy_controlplane
    dependsOn:
      - PopulateKeyVault
    condition:                         eq(dependencies.PopulateKeyVault.result, 'Succeeded')
    pool:                              $(this_agent)
    variables:
      - template:                      variables/01-deploy-control-plane-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          force_reset:                 ${{ parameters.force_reset }}
    displayName:                       Deploy the control plane

    jobs:
      - job:                           Deploy_controlplane
        displayName:                   Deploy the control plane
        workspace:
          clean:                       all
        steps:
          - task:                      PostBuildCleanup@4
          - template:                  templates\download.yaml
            parameters:
              getLatestFromBranch: true

          - task:                      TerraformInstaller@1
            displayName:               Install Terraform
            inputs:
              terraformVersion:        latest
          - task:                      Bash@3
            inputs:
              targetType:              'filePath'
              filePath:                "$(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/01-control-plane-deploy.sh"
              failOnStderr:            false
              workingDirectory:        "$(System.DefaultWorkingDirectory)"
            displayName:               Deploy control plane Part 2
            env:

              APPLICATION_CONFIGURATION_NAME:   $(APPLICATION_CONFIGURATION_NAME)
              APP_REGISTRATION_APP_ID:          $(APP_REGISTRATION_APP_ID)
              ARM_CLIENT_ID:                    $(ARM_CLIENT_ID)
              ARM_CLIENT_SECRET:                $(ARM_CLIENT_SECRET)
              ARM_SUBSCRIPTION_ID:              $(ARM_SUBSCRIPTION_ID)
              ARM_TENANT_ID:                    $(ARM_TENANT_ID)
              ARM_USE_MSI:                      $(Use_MSI)
              AZURE_DEVOPS_EXT_PAT:             $(System.AccessToken)
              CONFIG_REPO_PATH:                 ${{ parameters.config_repo_path }}/$(Deployment_Configuration_Path)
              CONTROL_PLANE_NAME:               $(control_plane_name)
              DEPLOYER_KEYVAULT:                $(DEPLOYER_KEYVAULT)
              DEPLOYER_TFSTATE_KEY:             "${{ parameters.deployer }}.terraform.tfstate"
              FORCE_RESET:                      ${{ lower(parameters.force_reset) }}
              IS_PIPELINE_DEPLOYMENT:           true
              LOGON_USING_SPN:                  $(Logon_Using_SPN)
              POOL:                             $(POOL)
              SAP_AUTOMATION_REPO_PATH:         ${{ parameters.sap_automation_repo_path }}
              SYSTEM_ACCESSTOKEN:               $(System.AccessToken)
              TF_IN_AUTOMATION:                 true
              TF_LOG:                           $(TF_LOG)
              TF_VAR_agent_ado_project:         $(System.TeamProject)
              TF_VAR_agent_ado_url:             $(System.CollectionUri)
              TF_VAR_agent_pat:                 $(System.AccessToken)
              TF_VAR_agent_pool:                $(POOL)
              TF_VAR_ansible_core_version:      $(ansible_core_version)
              TF_VAR_control_plane_name:        $(control_plane_name)
              TF_VAR_spn_id:                    $(ARM_OBJECT_ID)
              TF_VAR_tf_version:                $(tf_version)
              USE_MSI:                          $(Use_MSI)
              WEB_APP_CLIENT_SECRET:            $(WEB_APP_CLIENT_SECRET)
              ZONE:                             $(control_plane_name)
              keyvault:                         $(DEPLOYER_KEYVAULT)
  - stage:                             Web_App_Deployment
    pool:                              $(this_agent)
    variables:
      - template:                      variables/01-deploy-control-plane-variables.yaml
        parameters:
          control_plane_name:          ${{ parameters.control_plane_name }}
          force_reset:                 ${{ parameters.force_reset }}
    displayName: Deploy SAP configuration Web App

    dependsOn:
      - Deploy_controlplane
      - Prepare_Deployer
    condition: |
      and
      (
        eq($(HAS_APPSERVICE_DEPLOYED), true),
        eq(dependencies.Deploy_controlplane.result, 'Succeeded'),
        eq(dependencies.Prepare_Deployer.result, 'Succeeded')
      )
    jobs:
      - job: Deploy_web_app
        displayName: Deploy SAP configuration Web App
        workspace:
          clean: all
        steps:
          - template: templates\download.yaml
          - task: PostBuildCleanup@4
          - task: DotNetCoreCLI@2
            displayName: "Build the Configuration Web Application"
            inputs:
              command: "build"
              projects: "$(System.DefaultWorkingDirectory)/sap-automation/Webapp/SDAF/*.csproj"
          - task: DotNetCoreCLI@2
            displayName: "Publish the Configuration Web Application"
            inputs:
              command: publish
              projects: "**/Webapp/**/*.csproj"
              publishWebProjects: false
              arguments: "--output $(Build.ArtifactStagingDirectory)/WebApp"
              zipAfterPublish: true
              modifyOutputPath: true

          - task:                      AzureWebApp@1
            displayName:               "Deploy the Configuration Web Application"
            inputs:
              azureSubscription:       ${{parameters.connection_name}}
              appType:                 "webApp"
              appName:                 $(APP_SERVICE_NAME)
              package:                 "$(Build.ArtifactStagingDirectory)/WebApp/*.zip"
              deploymentMethod:        "auto"
              appSettings: '-CollectionUri $(System.CollectionUri)
                -ProjectName "$(System.TeamProject)"
                -RepositoryId $(Build.Repository.ID)
                -SourceBranch "$(Build.SourceBranchName)"
                -WORKLOADZONE_PIPELINE_ID $(WORKLOADZONE_PIPELINE_ID)
                -SYSTEM_PIPELINE_ID $(SYSTEM_PIPELINE_ID)
                -SAP_INSTALL_PIPELINE_ID $(SAP_INSTALL_PIPELINE_ID)
                -SDAF_GENERAL_GROUP_ID $(SDAF_GENERAL_GROUP_ID)
                -IS_PIPELINE_DEPLOYMENT true
                -CONTROLPLANE_ENV $(CONTROL_PLANE_ENVIRONMENT)
                -CONTROLPLANE_LOC $(CONTROL_PLANE_LOCATION)'
            env:
              ARM_SUBSCRIPTION_ID:     $(ARM_SUBSCRIPTION_ID)
              SYSTEM_PIPELINE_ID:      $(SYSTEM_PIPELINE_ID)
              WORKLOADZONE_PIPELINE_ID: $(WORKLOADZONE_PIPELINE_ID)
              SAP_INSTALL_PIPELINE_ID: $(SAP_INSTALL_PIPELINE_ID)
              SDAF_GENERAL_GROUP_ID:   $(SDAF_GENERAL_GROUP_ID)
              APP_SERVICE_NAME:         $(APP_SERVICE_NAME)
              WEBAPP_RESOURCE_GROUP:     $(WEBAPP_RESOURCE_GROUP)
              WEBAPP_ID:                 $(WEBAPP_ID)
              APP_REGISTRATION_APP_ID:   $(APP_REGISTRATION_APP_ID)
              APP_REGISTRATION_OBJECTID: $(APP_REGISTRATION_OBJECTID)
              ARM_TENANT_ID:             $(ARM_TENANT_ID)
              AZURE_CONNECTION_NAME:     ${{variables.connection_name}}

          - task:                      AzureCLI@2
            continueOnError:           false
            inputs:
              azureSubscription:       ${{parameters.connection_name}}
              scriptType:              bash
              scriptLocation:          'scriptPath'
              scriptPath:              $(System.DefaultWorkingDirectory)/sap-automation/deploy/scripts/pipeline_scripts/01-webapp-configuration.sh
              addSpnToEnvironment:     true
              visibleAzLogin:          false
              failOnStandardError:     false
            displayName: "Documentation"
            env:
              APP_REGISTRATION_APP_ID:   $(APP_REGISTRATION_APP_ID)
              APP_REGISTRATION_OBJECTID: $(APP_REGISTRATION_OBJECTID)
              APP_SERVICE_NAME:          $(APP_SERVICE_NAME)
              ARM_SUBSCRIPTION_ID:       $(ARM_SUBSCRIPTION_ID)
              BUILDPATH:                 $(Build.Repository.LocalPath)
              SYSTEM_PIPELINE_ID:        $(SYSTEM_PIPELINE_ID)
              WEBAPP_ID:                 $(WEBAPP_ID)
              WEBAPP_IDENTITY:           $(WEBAPP_IDENTITY)
